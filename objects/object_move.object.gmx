<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_movingb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_rhythmicparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

mystate = -1;
beatperstep = 1;
d = 0;
image_speed = 0;

ang = 0;

mysolid = instance_create(x,y,obj_solid);
mysolid.image_xscale = 2;
mysolid.image_yscale = 2;

orix = x;
oriy = y;

typeC = 0;
type = 0; //Customizable Type via creation code, default is 0
distance = 1;

d = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop Moving

hspeed = 0;
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving to next position

switch(mystate){
case 0: //left
hspeed = -4 * distance;

break;
case 1: //right
hspeed = 4 * distance;
break;
case 2: //up
vspeed = -4 * distance;
break;
case 3: //down
vspeed = 4 * distance;
break;

case 4: //Up-Left
hspeed = 4 * distance;
break;
case 5: //Up-Right
vspeed = 4 * distance;
break;
case 6: //Down-Right
hspeed = -4 * distance;
break;
case 7: //Down-Left
vspeed = -4 * distance;
break;
}
alarm[2]=9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blink Animation

image_speed = 0.5
audio_play_sound(snd_metronome, 11, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mysolid.x = x;
mysolid.y = y;
if(place_meeting(x,y-5,obj_player)){
obj_player.x+=hspeed;
obj_player.y=y-31+vspeed;
show_debug_message(vspeed);
obj_player.vsp = 0;
obj_player.state=0;
}
if(place_meeting(x,y-5,obj_Tel_R_4_Slow)){
obj_Tel_R_4_Slow.x+=hspeed;
obj_Tel_R_4_Slow.y=y-16+vspeed;
show_debug_message(vspeed);
obj_Tel_R_4_Slow.vsp = 0;
obj_Tel_R_4_Slow.state=0;
}

if(place_meeting(x,y-5,obj_Inv_Still)){
obj_Inv_Still.x+=hspeed;
obj_Inv_Still.y=y-16+vspeed;
show_debug_message(vspeed);
obj_Inv_Still.vsp = 0;
obj_Inv_Still.state=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Proper Arrow Angle

switch(mystate){
case 0:
ang = 0;
break;
case 1:
ang = 180;
break;
case 2:
ang = 270;
break;
case 3:
ang = 90;
break;

case 4:
ang = 180;
break;
case 5:
ang = 90;
break;
case 6:
ang = 0;
break;
case 7:
ang = 270;
break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Updating State



if(mystate &gt;= 4){
switch(mystate){
case 4:
    if(type == 4) { x=orix; y=oriy;}
    else if(type == 5) { x=orix - (32 * distance); y=oriy;} 
    else if(type == 6) { x=orix - (32 * distance); y=oriy-(32 * distance);}  
    else if(type == 7) { y=oriy - (32 * distance); x=orix;}    
//x += (32 * distance);
break;
case 5:
    if(type == 4) { x=orix + (32 * distance); y=oriy;} 
    else if(type == 5) { x=orix; y=oriy;}
    else if(type == 6) { y=oriy - (32 * distance); x=orix;}  
    else if(type == 7) { x=orix + (32 * distance); y=oriy-(32 * distance);} 
//y += (32 * distance);

break;
case 6:
    if(type == 4) { x=orix + (32 * distance); y=oriy+(32 * distance);}
    else if(type == 5) { y=oriy + (32 * distance); x=orix;} 
    else if(type == 6)  {x=orix; y=oriy;}  
    else if(type == 7) { x=orix + (32 * distance); y=oriy;} 
//x -= (32 * distance);
break;
case 7:
    if(type == 4)  { y=oriy + (32 * distance); x=orix;} 
    else if(type == 5) { x=orix - (32 * distance); y=oriy+(32 * distance);}
    else if(type == 6) { x=orix - (32 * distance); y=oriy;}   
    else if(type == 7) {x=orix; y=oriy;} 
//y -= (32 * distance);
break;
}
}

else if(mystate==type ){
x=orix;
y=oriy;
}else{
switch(mystate){
case 0:
x=orix+(32 * distance);
break;
case 1:
x=orix-(32 * distance);
break;
case 2:
y=oriy+(32 * distance);
break;
case 3:
y=oriy-(32 * distance);
break;
}
}

alarm[1]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Stuff that happens when the beat triggers</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(global.beatstep){
case 0:
case 1:
    if (mystate == -1){
        mystate = type;
    }
    if(type &lt;= 3){
        mystate = type;
    }
    else{
    typeC = mystate;
        show_debug_message("ouch");
        if(d == 0){
            d =1 ;
            mystate = type;
        }
        if(d == 1){
            d = 2;
        }
        else{
            d = 1;
            
            if(typeC == 4){
                mystate = 5;
            }
            else if(typeC == 5){
                mystate = 6;
            }
            else if(typeC == 6){
                mystate = 7;
            }
            else if(typeC == 7){
                mystate = 4;
            }

        }

    }
    show_debug_message( mystate);
    event_user(5);
    break;
case 2:
case 6: //blink
    alarm[0]=1;
    break;
case 3:
case 7: //move
    event_user(2);
    break;
case 4:
case 5:
    if(type &gt;= 4){
        typeC = mystate;
        show_debug_message("ouch2");
        if(d == 1){
            d = 2;
        }
        else{
            d = 1;
            typeC = mystate;
            if(typeC == 4){
                mystate = 5;
            }
            else if(typeC == 5){
                mystate = 6;
            }
            else if(typeC == 6){
                mystate = 7;
            }
            else if(typeC == 7){
                mystate = 4;
            }

        }
    }
    else if(type%2==0){
        mystate = type+1;
    }else{
        mystate = type-1;
    }
    event_user(5);
    break;
    show_debug_message( mystate);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finishing Blinking Animation

if(sprite_index = spr_movingb){
image_index = 0;
image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y);
draw_sprite_ext(spr_movingb_arrow,image_index,x+16,y+16,1,1,ang,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
