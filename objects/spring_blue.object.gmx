<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_toggleb_b</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_rhythmicparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

mystate = 0;
spring_power = 50;
beatperstep = 1;
d = 0;
image_speed = 0;
mysolid = noone;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index = spr_toggleb_b){
image_speed = 0.8
audio_play_sound(snd_metronome, 11, false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>t = bbox_top;
b = bbox_bottom;
l = bbox_left;
r = bbox_right;
if(sprite_index = spr_toggleb_b){
if(instance_exists(obj_player)){
        if(collision_rectangle(l,t-1,r,t,obj_player,false,true)){
            obj_player.JUMP_SPD=spring_power;
        }
        else obj_player.JUMP_SPD=10;
    }
    show_debug_message(obj_player.JUMP_SPD);
    if(collision_rectangle(bbox_left,bbox_top+sprite_height/4,bbox_left+sprite_width/4,bbox_bottom,obj_player,false,true)){
        obj_player.x = bbox_left - (obj_player.bbox_right - obj_player.x) - 2;
    } else if (collision_rectangle(bbox_right-sprite_width/4,bbox_top+sprite_height/4,bbox_right,bbox_bottom,obj_player,false,true)) {
        obj_player.x = bbox_right + (obj_player.x - obj_player.bbox_left) + 2;
    } else if (!place_meeting(x,y+32,obj_solid) &amp;&amp; collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_player,false,true)){
        obj_player.y = bbox_bottom + 1;
    } else if(collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top+sprite_height/4,obj_player,false,true)){
        obj_player.y = bbox_top - (obj_player.bbox_bottom - obj_player.bbox_top);
    } 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Updating State

if(mystate=1){
    sprite_index = spr_toggleb_b
    mysolid = instance_create(x,y,obj_solid);
    mysolid.image_xscale = 2;
    mysolid.image_yscale = 2;
     
    
    /*if(obj_player.x - x &lt; 16){
        obj_player.x = x - obj_player.sprite_width + obj_player.sprite_xoffset;
    } else {
        obj_player.x = x + 32 + obj_player.sprite_xoffset;
    }
    
    
    if(obj_player.x - x &lt; 16){
        obj_player.x = x - obj_player.sprite_width + obj_player.sprite_xoffset;
    } else {
        obj_player.x = x + 32 + obj_player.sprite_xoffset;
    }
    
    if(!place_meeting(x,y+32,obj_solid)){
    obj_player.y=y+32;
    }else if(!place_meeting(x-32,y,obj_solid)){
    obj_player.x=x-32;
    }else{
    obj_player.x=x+32;
    }*/

//obj_player.vsp = 0;

}else{
sprite_index = spr_toggleb_b_empty
instance_destroy(mysolid);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Stuff that happens when the beat triggers</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(global.beatstep){
case 0:
case 4: //solid
mystate = 1;
event_user(2);
break;
case 1:
case 5: //blink
alarm[0]=1;
break;
case 2 :
case 6 : //blank
mystate = 0;
event_user(2);
break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finishing Blinking Animation

if(sprite_index = spr_toggleb_b){
image_index = 0;
image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
