<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_movingb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_rhythmicparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

mystate = -1;
beatperstep = 1;
d = 0;
image_speed = 0;

ang = 0;

mysolid = instance_create(x,y,obj_solid);
mysolid.image_xscale = 2;
mysolid.image_yscale = 2;

orix = x;
oriy = y;

type = 0; //Customizable Type via creation code, default is 0


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop Moving

hspeed = 0;
vspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving to next position

switch(mystate){
case 0: //left
hspeed = -4;

break;
case 1: //right
hspeed = 4;
break;
case 2: //up
vspeed = 4;
break;
case 3: //down
vspeed = -4;
break;
}
alarm[2]=9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blink Animation

image_speed = 0.5
audio_play_sound(snd_metronome, 11, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> mysolid.x = x;
mysolid.y = y;
t = bbox_top;
b = bbox_bottom;
l = bbox_left;
r = bbox_right;
mid_x = (l+r)/2;
mid_y = (t+b)/2;

    if(collision_rectangle(l+3,t+4,l+sprite_width/4,b-2,obj_player,true,true)){
            show_debug_message("left");
            obj_player.x+=hspeed*2-1;
            obj_player.y+=vspeed;
    }
    else if(collision_rectangle(r-sprite_width/4,t+4,r-3,b-2,obj_player,true,true)){
            show_debug_message("right");
            obj_player.x+=hspeed*2+1;
            obj_player.y+=vspeed;
    }
    else if(collision_rectangle(l+4,t+5,r-4,t+sprite_height/4,obj_player,true,true)){
            show_debug_message("top");
            obj_player.x+=hspeed;
            obj_player.y=y-31+vspeed;
    }
    else if(collision_rectangle(l+2,t+sprite_height/4+1,r-2,b-2,obj_player,true,true)){
            show_debug_message("bottom");
            obj_player.x+=hspeed;
            obj_player.y=b+5;
    }
    if(instance_exists(obj_player)){
    if(collision_rectangle(l,t-5,r,t,obj_player,false,true)){
            obj_player.x+=hspeed;
            obj_player.vsp = 0;
            obj_player.state=0;
            if(vspeed&lt;0)obj_player.y=t-32+vspeed;
            else obj_player.y+=vspeed;
    }
    }
    
    /*if(instance_exists(obj_player)){
    a = collision_rectangle(obj_player.bbox_left-1,obj_player.bbox_top+1,obj_player.bbox_right-1,obj_player.bbox_bottom-1,obj_solid,false,true);
    if( a != noone){
        show_debug_message(a);
        global.playerHp = 0;
        instance_create(x,y,obj_deadplayer);
        instance_destroy(obj_player);
    }
}

/*
if(place_meeting(x,y-5,obj_player)){
    obj_player.x+=hspeed;
    obj_player.y=y-31+vspeed;
    //show_debug_message(vspeed);
    obj_player.vsp = 0;
    obj_player.state=0;
    if(!place_free(obj_player.x,obj_player.y)){
        global.playerHp = 0;
        instance_create(x,y,obj_deadplayer);
        instance_destroy(obj_player);
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Proper Arrow Angle

switch(mystate){
case 0:
ang = 0;
break;
case 1:
ang = 180;
break;
case 2:
ang = 90;
break;
case 3:
ang = 270;
break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Updating State



if(mystate==type){
x=orix;
y=oriy;
}else{
switch(mystate){
case 0:
x=orix+32;
break;
case 1:
x=orix-32;
break;
case 2:
y=oriy-32;
break;
case 3:
y=oriy+32;
break;
}
}

alarm[1]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Stuff that happens when the beat triggers</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(global.beatstep){
case 0:
case 1:
mystate = type;
event_user(5);
break;
case 2:
case 6: //blink
alarm[0]=1;
break;
case 3:
case 7: //move
event_user(2);
break;
case 4:
case 5:
if(type%2==0){
mystate = type+1;
}else{
mystate = type-1;
}
event_user(5);
break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finishing Blinking Animation

if(sprite_index = spr_movingb){
image_index = 0;
image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y);
draw_sprite_ext(spr_movingb_arrow,image_index,x+16,y+16,1,1,ang,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
